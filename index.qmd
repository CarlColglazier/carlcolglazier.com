---
title: "Carl Colglazier"
image: "assets/profile.jpg"
about:
  id: hero-heading
  template: trestles
  image: "assets/profile.jpg"
  image-shape: round
  image-width: 15em
  links:
    - icon: scroll
      text: CV
      href: "documents/cv.pdf"
listing:
  id: latest-notes
  contents:
    - notes/**/*.qmd
    - "!notes/index.qmd"
  max-items: 5
  fields: [title, date]
  sort: "date desc"
  template: html/simplelist.ejs
format:
  html:
    pagetitle: "About Me"
    page-layout: full
    quarto-template-params:
      banner-header-class: "home"
---

:::{#hero-heading}

<!--## Welcome to my home on the information superhighway-->

I am a PhD candidate in [Technology and Social Behavior](https://tsb.northwestern.edu/) (a dual degree in computer science & communication studies) at Northwestern University where I am affiliated with the [Community Data Science Collective](https://communitydata.science/).

My [research](/research/) focuses on decentralized social networks like the [Fediverse](https://en.wikipedia.org/wiki/Fediverse) and their role as sociotechnical systems. My research often uses [computational social science](https://carlcolglazier.github.io/css-syllabus/syllabus.html) to investigate how these systems handle "tricky problems" like content moderation and discovery.

<!--
At North Carolina State University, I graduated in 2019 with a B.S. in
Computer Science and a B.A. in Communication Media. Previously, I worked as intern in full stack software engineering at IBM and as an undergraduate researcher at the Center for Research Computing at the University of Notre Dame.
-->

These days, I am most active on [Bluesky](https://bsky.app/profile/carl.cx) and likely [writing notes in Obsidian, programs in some VS Code variant, and everything else in Emacs](/tools/).

:::

::: {.grid}

::: {.g-col-lg-6 .g-col-12}
### Latest Notes

::: {#latest-notes}
:::
::: 
<!--First column-->

::: {.g-col-lg-6 .g-col-12}

### A Sample ($N = 1$) from My Bluesky Timeline

::: {#bsky-container}
:::

<script>
// Fetch and render Bluesky sampler data
async function fetchAndRenderBskyData() {
  try {
    const response = await fetch('https://carlcolglazier.com/bsky-sampler.json');
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    const data = await response.json();
    const container = document.createElement('div');
    container.className = 'bsky-post';
    container.style.cssText = `
      border: 1px solid #ccc;
      border-radius: 8px;
      padding: 16px;
      margin: 16px 0;
    `;
    const timestamp = new Date(data.timestamp);
    const formattedTime = timestamp.toLocaleString();
    const post_link = `https://bsky.app/profile/carl.cx/post/${data.uri.split('/').at(-1)}`;
    container.innerHTML = `
      <div class="post-text" style="margin-bottom: 12px; font-size: 16px; line-height: 1.4;">
        ${escapeHtml(data.text)}
      </div>
      <div class="post-meta" style="color: #666; font-size: 14px; display: flex; justify-content: space-between; align-items: center;">
        <span class="timestamp">${formattedTime}</span>
        <a href="${escapeHtml(post_link)}" target="_blank">
          View Post
        </a>
      </div>
    `;
    const targetContainer = document.getElementById('bsky-container') || document.body;
    targetContainer.appendChild(container);
  } catch (error) {
    console.error('Error fetching Bluesky data:', error);
    const errorDiv = document.createElement('div');
    errorDiv.style.cssText = `
      color: #d32f2f;
      background-color: #ffebee;
      border: 1px solid #f44336;
      border-radius: 4px;
      padding: 12px;
      margin: 16px 0;
      max-width: 600px;
    `;
    errorDiv.textContent = `Failed to load Bluesky data: ${error.message}`;
    const targetContainer = document.getElementById('bsky-container') || document.body;
    targetContainer.appendChild(errorDiv);
  }
}

function escapeHtml(text) {
  const div = document.createElement('div');
  div.textContent = text;
  return div.innerHTML;
}

if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', fetchAndRenderBskyData);
} else {
  fetchAndRenderBskyData();
}
</script>


::: 
<!--Second column-->

:::
