var Oscilloscope=function(){"use strict";var t=function(t,i){if(void 0===i&&(i={}),!(t instanceof window.AudioNode))throw new Error("Oscilloscope source must be an AudioNode");t instanceof window.AnalyserNode?this.analyser=t:(this.analyser=t.context.createAnalyser(),t.connect(this.analyser)),i.fftSize&&(this.analyser.fftSize=i.fftSize),this.timeDomain=new Uint8Array(this.analyser.frequencyBinCount),this.drawRequest=0};return t.prototype.animate=function(t,i,e,a,n){var s=this;if(this.drawRequest)throw new Error("Oscilloscope animation is already running");this.ctx=t;var o=function(){t.clearRect(0,0,t.canvas.width,t.canvas.height),s.draw(t,i,e,a,n),s.drawRequest=window.requestAnimationFrame(o)};o()},t.prototype.stop=function(){window.cancelAnimationFrame(this.drawRequest),this.drawRequest=0,this.ctx.clearRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height)},t.prototype.draw=function(t,i,e,a,n){var s=this;i=i||0,e=e||0,a=a||t.canvas.width-i,n=n||t.canvas.height-e,this.analyser.getByteTimeDomainData(this.timeDomain);var o=a/this.timeDomain.length;t.beginPath();for(var r=0;r<this.timeDomain.length;r+=2){var c=i+r*o,h=e+n*(s.timeDomain[r]/256);t.lineTo(c,h)}t.stroke()},t}();
var audioContext = new window.AudioContext()
var canvas = document.createElement('canvas')
// setup audio element
var audioElements = document.getElementsByClassName('scope')
for (var i = 0; i < audioElements.length; i++) {
  var audioElement = audioElements[i];
  console.log(audioElement.parentNode);
  audioElement.parentNode.insertBefore(canvas, audioElement);
  //audioElement.before(canvas)
  // create source from html5 audio element
  var source = audioContext.createMediaElementSource(audioElement)
  // attach oscilloscope
  var scope = new Oscilloscope(source)
  // reconnect audio output to speakers
  source.connect(audioContext.destination)
  // customize drawing options
  var ctx = canvas.getContext('2d')
 ctx.lineWidth = 2
  ctx.strokeStyle = '#000'
  // start default animation loop
  scope.animate(ctx)
}
